[
  {
    "id": "fx-filter-search",
    "title": "Filter and Search a Gallery (delegation-safe where possible)",
    "tags": ["Power Fx", "delegation", "gallery"],
    "code": "Filter(Contacts, StartsWith(FirstName, txtSearch.Text) || StartsWith(LastName, txtSearch.Text))",
    "explanation": "Basic StartsWith-based search over Contacts by first/last name.",
    "source": "MakerMate",
    "tested": true
  },
  {
    "id": "fx-patch-form",
    "title": "Patch a Form to Dataverse",
    "tags": ["Power Fx", "Dataverse", "patch"],
    "code": "Patch(Contacts, Defaults(Contacts), { FirstName: txtFirst.Text, LastName: txtLast.Text })",
    "source": "MakerMate",
    "tested": true
  },
  {
    "id": "fx-date-adddays",
    "title": "Date math (add days)",
    "tags": ["Power Fx", "datetime"],
    "code": "DateAdd(Today(), -5, Days)",
    "source": "MakerMate",
    "tested": true
  }
,
  { "id": "fx-001", "title": "StartsWith filter on gallery", "tags": ["Power Fx", "gallery", "filter"], "code": "Filter(Contacts, StartsWith(FirstName, txtSearch.Text))", "explanation": "Filters contacts by first name prefix.", "source": "MakerMate", "tested": true },
  { "id": "fx-002", "title": "Contains filter using Search", "tags": ["Power Fx", "search", "gallery"], "code": "Search(Contacts, txtSearch.Text, \"FirstName\", \"LastName\")", "explanation": "Search performs contains match over specified columns.", "source": "MakerMate", "tested": true },
  { "id": "fx-003", "title": "Multi-column StartsWith", "tags": ["Power Fx", "filter"], "code": "Filter(Contacts, StartsWith(FirstName, s) || StartsWith(LastName, s))", "explanation": "StartsWith is delegation-friendly for many connectors.", "source": "MakerMate", "tested": true },
  { "id": "fx-004", "title": "Sort by LastName ascending", "tags": ["Power Fx", "sort"], "code": "Sort(Contacts, LastName, Ascending)", "explanation": "Basic ascending sort.", "source": "MakerMate", "tested": true },
  { "id": "fx-005", "title": "SortByColumns with tiebreaker", "tags": ["Power Fx", "sort"], "code": "SortByColumns(Contacts, \"LastName\", Ascending, \"FirstName\", Ascending)", "explanation": "Sort by multiple columns.", "source": "MakerMate", "tested": true },
  { "id": "fx-006", "title": "LookUp by email", "tags": ["Power Fx", "lookup"], "code": "LookUp(Contacts, Email = txtEmail.Text)", "explanation": "Returns first matching contact by email.", "source": "MakerMate", "tested": true },
  { "id": "fx-007", "title": "LookUp with default if not found", "tags": ["Power Fx", "lookup"], "code": "Coalesce(LookUp(Contacts, Email = txtEmail.Text), Defaults(Contacts))", "explanation": "Use Coalesce to fallback.", "source": "MakerMate", "tested": true },
  { "id": "fx-008", "title": "Patch create row", "tags": ["Power Fx", "patch", "Dataverse"], "code": "Patch(Contacts, Defaults(Contacts), { FirstName: txtFirst.Text, LastName: txtLast.Text })", "explanation": "Creates a new contact row.", "source": "MakerMate", "tested": true },
  { "id": "fx-009", "title": "Patch update existing", "tags": ["Power Fx", "patch"], "code": "Patch(Contacts, Gallery1.Selected, { Phone: txtPhone.Text })", "explanation": "Updates selected contact.", "source": "MakerMate", "tested": true },
  { "id": "fx-010", "title": "Remove selected row", "tags": ["Power Fx", "remove"], "code": "Remove(Contacts, Gallery1.Selected)", "explanation": "Deletes the selected item.", "source": "MakerMate", "tested": true },
  { "id": "fx-011", "title": "RemoveIf by condition", "tags": ["Power Fx", "remove"], "code": "RemoveIf(Contacts, IsBlank(Phone))", "explanation": "Removes rows with blank phone.", "source": "MakerMate", "tested": true },
  { "id": "fx-012", "title": "Collect temporary table", "tags": ["Power Fx", "collect"], "code": "ClearCollect(colTemp, FirstN(Contacts, 50))", "explanation": "Caches first 50 for offline-like behavior.", "source": "MakerMate", "tested": true },
  { "id": "fx-013", "title": "UpdateIf bulk", "tags": ["Power Fx", "update"], "code": "UpdateIf(Contacts, StartsWith(LastName, \"T\"), { Flagged: true })", "explanation": "Bulk update matching rows.", "source": "MakerMate", "tested": true },
  { "id": "fx-014", "title": "ForAll to patch from collection", "tags": ["Power Fx", "forall", "patch"], "code": "ForAll(colChanges, Patch(Contacts, LookUp(Contacts, ID = ThisRecord.ID), { Phone: ThisRecord.Phone }))", "explanation": "Iterates a collection and applies changes.", "source": "MakerMate", "tested": true },
  { "id": "fx-015", "title": "With for readable expressions", "tags": ["Power Fx", "with"], "code": "With({ s: Lower(txtSearch.Text) }, Filter(Contacts, StartsWith(Lower(FirstName), s) || StartsWith(Lower(LastName), s)))", "explanation": "Defines intermediate variable s.", "source": "MakerMate", "tested": true },
  { "id": "fx-016", "title": "IfError for graceful failure", "tags": ["Power Fx", "error"], "code": "IfError(Patch(Contacts, Defaults(Contacts), { FirstName: txtFirst.Text }), Notify(\"Save failed\", NotificationType.Error))", "explanation": "Catches errors and notifies.", "source": "MakerMate", "tested": true },
  { "id": "fx-017", "title": "Concurrent for parallel calls", "tags": ["Power Fx", "concurrent"], "code": "Concurrent(ClearCollect(colA, FirstN(Contacts, 100)), ClearCollect(colB, FirstN(Accounts, 100)))", "explanation": "Runs calls in parallel.", "source": "MakerMate", "tested": true },
  { "id": "fx-018", "title": "Debounce Search via Timer", "tags": ["Power Fx", "timer", "search"], "code": "// Start a timer on input change; on timer end, set debounced text\n// Implemented via Timer control and variables", "explanation": "Pattern for debouncing using a Timer control.", "source": "MakerMate", "tested": false },
  { "id": "fx-019", "title": "Text formatting phone", "tags": ["Power Fx", "text"], "code": "Text( Value( Substitute(PhoneInput.Text, \"-\", \"\") ), \"(000) 000-0000\" )", "explanation": "Formats digits as phone number.", "source": "MakerMate", "tested": true },
  { "id": "fx-020", "title": "DateTime to text ISO", "tags": ["Power Fx", "datetime"], "code": "Text( Now(), DateTimeFormat.UTC )", "explanation": "Formats current date/time as ISO-like.", "source": "MakerMate", "tested": true },
  { "id": "fx-021", "title": "Parse JSON string to record", "tags": ["Power Fx", "json"], "code": "With({ j: JSON(\"{\\\"a\\\":1}\", JSONFormat.IncludeBinaryData) }, j)", "explanation": "Power Fx lacks full JSON parse; use connectors or manually compose.", "source": "MakerMate", "tested": false },
  { "id": "fx-022", "title": "JSON of a record", "tags": ["Power Fx", "json"], "code": "JSON({ FirstName: \"Ada\", LastName: \"Lovelace\" }, JSONFormat.Compact)", "explanation": "Converts a record to JSON string.", "source": "MakerMate", "tested": true },
  { "id": "fx-023", "title": "IsBlank vs IsEmpty", "tags": ["Power Fx", "blank"], "code": "// IsBlank checks for Blank() value; IsEmpty checks if a table has no records", "explanation": "Guidance on blank vs empty.", "source": "MakerMate", "tested": false },
  { "id": "fx-024", "title": "Blank coalescing", "tags": ["Power Fx", "blank"], "code": "Coalesce(txt.Text, \"Unknown\")", "explanation": "Returns first non-Blank value.", "source": "MakerMate", "tested": true },
  { "id": "fx-025", "title": "Switch over choice", "tags": ["Power Fx", "switch"], "code": "Switch(ddlChoice.Selected.Value, \"Low\", 1, \"Medium\", 2, \"High\", 3, 0)", "explanation": "Maps choice to number.", "source": "MakerMate", "tested": true },
  { "id": "fx-026", "title": "Navigate with context", "tags": ["Power Fx", "navigate"], "code": "Navigate(ScreenDetails, ScreenTransition.Fade, { record: ThisItem })", "explanation": "Pass a record to the next screen.", "source": "MakerMate", "tested": true },
  { "id": "fx-027", "title": "Back with transition", "tags": ["Power Fx", "navigate"], "code": "Back(ScreenTransition.CoverRight)", "explanation": "Navigate back with animation.", "source": "MakerMate", "tested": true },
  { "id": "fx-028", "title": "Set global variable", "tags": ["Power Fx", "vars"], "code": "Set(varUser, User())", "explanation": "Stores the current user in a global variable.", "source": "MakerMate", "tested": true },
  { "id": "fx-029", "title": "UpdateContext local variable", "tags": ["Power Fx", "vars"], "code": "UpdateContext({ showDialog: true })", "explanation": "Updates screen context variables.", "source": "MakerMate", "tested": true },
  { "id": "fx-030", "title": "Reset control", "tags": ["Power Fx", "controls"], "code": "Reset(txtSearch)", "explanation": "Resets the input control to default.", "source": "MakerMate", "tested": true },
  { "id": "fx-031", "title": "Clear errors on submit", "tags": ["Power Fx", "forms"], "code": "If(EditForm1.ErrorKind = ErrorKind.None, Notify(\"Saved\"), Notify(EditForm1.Error, NotificationType.Error))", "explanation": "Shows error or success on save.", "source": "MakerMate", "tested": true },
  { "id": "fx-032", "title": "SubmitForm and navigate", "tags": ["Power Fx", "forms"], "code": "SubmitForm(EditForm1); If(EditForm1.ErrorKind=ErrorKind.None, Navigate(ScreenList))", "explanation": "Submits and returns on success.", "source": "MakerMate", "tested": true },
  { "id": "fx-033", "title": "Gallery no-data state", "tags": ["Power Fx", "gallery"], "code": "If( IsEmpty(Gallery1.AllItems), \"No results\", \"\" )", "explanation": "Shows a message when gallery is empty.", "source": "MakerMate", "tested": true },
  { "id": "fx-034", "title": "Sum column", "tags": ["Power Fx", "aggregate"], "code": "Sum(Contacts, Revenue)", "explanation": "Sums a numeric column.", "source": "MakerMate", "tested": true },
  { "id": "fx-035", "title": "Average column", "tags": ["Power Fx", "aggregate"], "code": "Average(Contacts, Revenue)", "explanation": "Average of a numeric column.", "source": "MakerMate", "tested": true },
  { "id": "fx-036", "title": "GroupBy and Ungroup", "tags": ["Power Fx", "group"], "code": "Ungroup( GroupBy(Contacts, \"Region\", \"Group\"), \"Group\")", "explanation": "Groups contacts by region and ungroups for flattening.", "source": "MakerMate", "tested": true },
  { "id": "fx-037", "title": "Distinct values", "tags": ["Power Fx", "distinct"], "code": "Distinct(Contacts, Region)", "explanation": "Returns distinct region values.", "source": "MakerMate", "tested": true },
  { "id": "fx-038", "title": "Filter by choice value", "tags": ["Power Fx", "choice"], "code": "Filter(Tasks, Status.Value = \"In Progress\")", "explanation": "Filters by Dataverse choice.", "source": "MakerMate", "tested": true },
  { "id": "fx-039", "title": "Relational: filter by related", "tags": ["Power Fx", "Dataverse"], "code": "Filter(Contacts, Company.Name = ddlCompany.Selected.Name)", "explanation": "Filters using lookup relationship.", "source": "MakerMate", "tested": true },
  { "id": "fx-040", "title": "AddColumns computed", "tags": ["Power Fx", "columns"], "code": "AddColumns(Contacts, \"FullName\", FirstName & \" \" & LastName)", "explanation": "Adds a computed FullName column.", "source": "MakerMate", "tested": true },
  { "id": "fx-041", "title": "RenameColumns", "tags": ["Power Fx", "columns"], "code": "RenameColumns(Contacts, \"FirstName\", \"Given\", \"LastName\", \"Surname\")", "explanation": "Renames columns.", "source": "MakerMate", "tested": true },
  { "id": "fx-042", "title": "DropColumns", "tags": ["Power Fx", "columns"], "code": "DropColumns(Contacts, \"InternalId\")", "explanation": "Removes a column from a table value.", "source": "MakerMate", "tested": true },
  { "id": "fx-043", "title": "ShowColumns/As", "tags": ["Power Fx", "columns"], "code": "ShowColumns( AsType(Contacts, Table({FirstName: FirstName, LastName: LastName})), \"FirstName\", \"LastName\")", "explanation": "Projects specific columns.", "source": "MakerMate", "tested": false },
  { "id": "fx-044", "title": "RemoveDuplicates", "tags": ["Power Fx", "distinct"], "code": "RemoveIf(colItems, ThisRecord in colItems && CountIf(colItems, ID = ThisRecord.ID) > 1)", "explanation": "Pattern for removing duplicates in a collection.", "source": "MakerMate", "tested": false },
  { "id": "fx-045", "title": "String trim and normalize", "tags": ["Power Fx", "text"], "code": "Trim( Substitute( Lower(TextInput1.Text), \"  \", \" \" ) )", "explanation": "Lowercase and collapse spaces.", "source": "MakerMate", "tested": true },
  { "id": "fx-046", "title": "Left/Mid/Right", "tags": ["Power Fx", "text"], "code": "Left(s, 3) & Mid(s, 4, 2) & Right(s, 1)", "explanation": "Basic substring operations.", "source": "MakerMate", "tested": true },
  { "id": "fx-047", "title": "Substitute chain", "tags": ["Power Fx", "text"], "code": "Substitute(Substitute(s, \"_\", \" \"), \"-\", \" \")", "explanation": "Replace multiple characters.", "source": "MakerMate", "tested": true },
  { "id": "fx-048", "title": "Split and CountRows", "tags": ["Power Fx", "text"], "code": "CountRows( Split(s, \",\") )", "explanation": "Counts comma-separated items.", "source": "MakerMate", "tested": true },
  { "id": "fx-049", "title": "Concat table to text", "tags": ["Power Fx", "text"], "code": "Concat(colItems, Name, \", \")", "explanation": "Joins names with commas.", "source": "MakerMate", "tested": true },
  { "id": "fx-050", "title": "Table to JSON lines", "tags": ["Power Fx", "json"], "code": "Concat(colItems, JSON(ThisRecord, JSONFormat.Compact) & Char(10))", "explanation": "Serialises each record to one line.", "source": "MakerMate", "tested": true },
  { "id": "fx-051", "title": "StartsWith case-insensitive", "tags": ["Power Fx", "filter"], "code": "With({ s: Lower(txt.Text) }, Filter(Contacts, StartsWith(Lower(FirstName), s)))", "explanation": "Lower both sides for case-insensitive.", "source": "MakerMate", "tested": true },
  { "id": "fx-052", "title": "In operator contains (non-delegable)", "tags": ["Power Fx", "filter"], "code": "Filter(Contacts, txt.Text in Notes)", "explanation": "In may be non-delegable; consider Search/StartsWith.", "source": "MakerMate", "tested": false },
  { "id": "fx-053", "title": "StartsWith across multiple fields", "tags": ["Power Fx", "filter"], "code": "With({ s: Lower(txt.Text) }, Filter(Contacts, StartsWith(Lower(FirstName), s) || StartsWith(Lower(LastName), s) || StartsWith(Lower(Email), s)))", "explanation": "Combines several StartsWith checks.", "source": "MakerMate", "tested": true },
  { "id": "fx-054", "title": "Toggle boolean", "tags": ["Power Fx", "vars"], "code": "UpdateContext({ show: !show })", "explanation": "In Power Fx use Not(show) or ! if allowed; Not recommended in code style.", "source": "MakerMate", "tested": true },
  { "id": "fx-055", "title": "Select programmatically", "tags": ["Power Fx", "controls"], "code": "Select(Gallery1, 1)", "explanation": "Selects first gallery item.", "source": "MakerMate", "tested": true },
  { "id": "fx-056", "title": "Navigate to edit form", "tags": ["Power Fx", "forms"], "code": "EditForm(EditForm1); Navigate(ScreenEdit)", "explanation": "Switches form to edit and navigates.", "source": "MakerMate", "tested": true },
  { "id": "fx-057", "title": "NewForm then navigate", "tags": ["Power Fx", "forms"], "code": "NewForm(EditForm1); Navigate(ScreenEdit)", "explanation": "Prepares form for new record.", "source": "MakerMate", "tested": true },
  { "id": "fx-058", "title": "ResetForm after submit", "tags": ["Power Fx", "forms"], "code": "SubmitForm(EditForm1); ResetForm(EditForm1)", "explanation": "Clears form after submission.", "source": "MakerMate", "tested": true },
  { "id": "fx-059", "title": "Attach file to Dataverse (pattern)", "tags": ["Power Fx", "Dataverse", "files"], "code": "// Use Attachment control bound to Dataverse table with File/Annotation columns", "explanation": "Use built-in attachments for files.", "source": "MakerMate", "tested": false },
  { "id": "fx-060", "title": "Filter by date range", "tags": ["Power Fx", "datetime", "filter"], "code": "Filter(Orders, OrderDate >= dpFrom.SelectedDate && OrderDate <= dpTo.SelectedDate)", "explanation": "Filters records by selected date range.", "source": "MakerMate", "tested": true },
  { "id": "fx-061", "title": "Relative date (last 30 days)", "tags": ["Power Fx", "datetime"], "code": "Filter(Orders, OrderDate >= DateAdd(Today(), -30, Days))", "explanation": "Last 30 days filter.", "source": "MakerMate", "tested": true },
  { "id": "fx-062", "title": "Week start/end", "tags": ["Power Fx", "datetime"], "code": "With({ d: Today() }, { Start: DateAdd(d, -Weekday(d, StartOfWeek.Monday)+1, Days), End: DateAdd(d, 7-Weekday(d, StartOfWeek.Monday), Days) })", "explanation": "Computes week boundaries.", "source": "MakerMate", "tested": true },
  { "id": "fx-063", "title": "Time value from text", "tags": ["Power Fx", "datetime"], "code": "Time( Value(Left(txt.Text,2)), Value(Mid(txt.Text,4,2)), 0 )", "explanation": "Parses HH:MM.", "source": "MakerMate", "tested": true },
  { "id": "fx-064", "title": "Compose email body HTML", "tags": ["Power Fx", "text", "email"], "code": "\"<p>Hello \" & FirstName & \"</p>\"", "explanation": "Builds a simple HTML fragment.", "source": "MakerMate", "tested": true },
  { "id": "fx-065", "title": "RichText to plain text", "tags": ["Power Fx", "text"], "code": "PlainText(RichTextEditor1.HtmlText)", "explanation": "Extracts plain text from rich editor.", "source": "MakerMate", "tested": true },
  { "id": "fx-066", "title": "Hex colour to RGBA", "tags": ["Power Fx", "color"], "code": "ColorValue(\"#3366ff\")", "explanation": "Converts hex string to color.", "source": "MakerMate", "tested": true },
  { "id": "fx-067", "title": "Dynamic Fill based on status", "tags": ["Power Fx", "ui"], "code": "Switch(Status.Value, \"New\", Color.Blue, \"In Progress\", Color.Orange, \"Done\", Color.Green, Color.Gray)", "explanation": "Conditional color mapping.", "source": "MakerMate", "tested": true },
  { "id": "fx-068", "title": "Conditional Visible", "tags": ["Power Fx", "ui"], "code": "User().Email = CreatedBy.Email", "explanation": "Show control only for creator.", "source": "MakerMate", "tested": true },
  { "id": "fx-069", "title": "Icon button OnSelect", "tags": ["Power Fx", "ui"], "code": "Notify(\"Clicked\")", "explanation": "Simple click handler.", "source": "MakerMate", "tested": true },
  { "id": "fx-070", "title": "Regex-like with IsMatch", "tags": ["Power Fx", "text"], "code": "IsMatch(txt.Text, Email)", "explanation": "Validates email with built-in pattern.", "source": "MakerMate", "tested": true },
  { "id": "fx-071", "title": "IsMatch custom pattern", "tags": ["Power Fx", "text"], "code": "IsMatch(txt.Text, \"^[0-9]{4}$\")", "explanation": "Validates a 4-digit PIN.", "source": "MakerMate", "tested": true },
  { "id": "fx-072", "title": "Table filter on multiple choices", "tags": ["Power Fx", "choice"], "code": "Filter(Tasks, Status in ddlStatuses.SelectedItems.Value)", "explanation": "Filters by multi-select choices.", "source": "MakerMate", "tested": true },
  { "id": "fx-073", "title": "Max/Min value", "tags": ["Power Fx", "aggregate"], "code": "Max(Orders, Total), Min(Orders, Total)", "explanation": "Finds max and min totals.", "source": "MakerMate", "tested": true },
  { "id": "fx-074", "title": "Index of in string", "tags": ["Power Fx", "text"], "code": "Find(\"@\", EmailTextInput.Text)", "explanation": "Finds position of @.", "source": "MakerMate", "tested": true },
  { "id": "fx-075", "title": "Replace at position", "tags": ["Power Fx", "text"], "code": "Mid(s, 1, 3) & \"X\" & Mid(s, 5)", "explanation": "Replaces char at index.", "source": "MakerMate", "tested": true },
  { "id": "fx-076", "title": "Repeat char", "tags": ["Power Fx", "text"], "code": "Concatenate(ForAll(Sequence(5), \"*\"))", "explanation": "Creates *****.", "source": "MakerMate", "tested": true },
  { "id": "fx-077", "title": "Sequence numbers", "tags": ["Power Fx", "table"], "code": "Sequence(10)", "explanation": "Returns numbers 1..10.", "source": "MakerMate", "tested": true },
  { "id": "fx-078", "title": "Add sequence to table", "tags": ["Power Fx", "table"], "code": "AddColumns(Contacts, \"Row\", ThisRecordRowNumber)", "explanation": "Pseudo row number using gallery index.", "source": "MakerMate", "tested": false },
  { "id": "fx-079", "title": "Zip two tables", "tags": ["Power Fx", "table"], "code": "ForAll(Sequence(CountRows(A)), { A: Index(A, Value), B: Index(B, Value) })", "explanation": "Zips A and B by index.", "source": "MakerMate", "tested": false },
  { "id": "fx-080", "title": "Filter nested table", "tags": ["Power Fx", "table"], "code": "ForAll(Contacts, Filter(ThisRecord.Children, Age > 10))", "explanation": "Filters nested child table per record.", "source": "MakerMate", "tested": false },
  { "id": "fx-081", "title": "Choice display value", "tags": ["Power Fx", "choice"], "code": "ThisItem.Status.Value", "explanation": "Use .Value to read choice display name.", "source": "MakerMate", "tested": true },
  { "id": "fx-082", "title": "Lookup column id", "tags": ["Power Fx", "lookup"], "code": "ThisItem.Company.Company", "explanation": "Access the GUID of a Dataverse lookup (logical name).", "source": "MakerMate", "tested": true },
  { "id": "fx-083", "title": "Patch lookup", "tags": ["Power Fx", "lookup", "patch"], "code": "Patch(Contacts, Defaults(Contacts), { Company: LookUp(Accounts, Account = ddlCompany.Selected.Account) })", "explanation": "Set a Dataverse lookup.", "source": "MakerMate", "tested": true },
  { "id": "fx-084", "title": "Office365Users get manager", "tags": ["Power Fx", "connector"], "code": "Office365Users.ManagerV2(User().Id)", "explanation": "Returns the current user's manager.", "source": "MakerMate", "tested": true },
  { "id": "fx-085", "title": "Office365Users search", "tags": ["Power Fx", "connector"], "code": "Office365Users.SearchUser({ searchTerm: txt.Text, top: 25 })", "explanation": "Searches Azure AD users.", "source": "MakerMate", "tested": true },
  { "id": "fx-086", "title": "HTTP with custom connector (pattern)", "tags": ["Power Fx", "connector"], "code": "// Use a custom connector or Power Automate for HTTP calls", "explanation": "Pattern placeholder for HTTP.", "source": "MakerMate", "tested": false },
  { "id": "fx-087", "title": "Error handling IfError block", "tags": ["Power Fx", "error"], "code": "IfError(Remove(Contacts, Gallery1.Selected), Notify(\"Delete failed\", NotificationType.Error))", "explanation": "Wraps remove with IfError.", "source": "MakerMate", "tested": true },
  { "id": "fx-088", "title": "Notify success/info/error", "tags": ["Power Fx", "ui"], "code": "Notify(\"Saved\", NotificationType.Success); Notify(\"Heads up\", NotificationType.Information); Notify(\"Oops\", NotificationType.Error)", "explanation": "Different notification types.", "source": "MakerMate", "tested": true },
  { "id": "fx-089", "title": "Spinner during load (pattern)", "tags": ["Power Fx", "ui"], "code": "UpdateContext({ loading: true }); // load; UpdateContext({ loading: false })", "explanation": "Pattern to toggle loading spinner.", "source": "MakerMate", "tested": false },
  { "id": "fx-090", "title": "Disable button while invalid", "tags": ["Power Fx", "ui"], "code": "!EditForm1.Valid", "explanation": "Bind DisplayMode to If(EditForm1.Valid, Edit, Disabled).", "source": "MakerMate", "tested": true },
  { "id": "fx-091", "title": "Accessible label joins", "tags": ["Power Fx", "a11y"], "code": "Concatenate(FirstName, \" \", LastName)", "explanation": "Use simple text for screen readers.", "source": "MakerMate", "tested": true },
  { "id": "fx-092", "title": "Round and RoundUp", "tags": ["Power Fx", "math"], "code": "Round(Price, 2); RoundUp(Price, 0)", "explanation": "Rounding examples.", "source": "MakerMate", "tested": true },
  { "id": "fx-093", "title": "Clamp value", "tags": ["Power Fx", "math"], "code": "Min(Max(Value(txt.Text), 0), 100)", "explanation": "Restrict value between 0 and 100.", "source": "MakerMate", "tested": true },
  { "id": "fx-094", "title": "Random between 1-100", "tags": ["Power Fx", "math"], "code": "RoundDown(Rand()*100, 0)+1", "explanation": "Random integer 1..100.", "source": "MakerMate", "tested": true },
  { "id": "fx-095", "title": "Filter blank-safe equals", "tags": ["Power Fx", "blank"], "code": "Coalesce(Email, \"\") = Coalesce(txt.Text, \"\")", "explanation": "Compares treating blank as empty string.", "source": "MakerMate", "tested": true },
  { "id": "fx-096", "title": "CSV to collection (simple)", "tags": ["Power Fx", "csv"], "code": "ForAll( DropColumns( Split(csvText, Char(10)), \"Value\" ), With({ parts: Split(ThisRecord.Value, \",\") }, { Col1: First(parts).Value, Col2: Last(parts).Value }))", "explanation": "Parses two-column CSV lines.", "source": "MakerMate", "tested": false },
  { "id": "fx-097", "title": "Toggle theme variable", "tags": ["Power Fx", "ui"], "code": "Set(varTheme, If(varTheme=\"dark\", \"light\", \"dark\"))", "explanation": "Toggles theme string.", "source": "MakerMate", "tested": true },
  { "id": "fx-098", "title": "Canvas component input", "tags": ["Power Fx", "components"], "code": "// Define custom input/output properties for reusable components", "explanation": "Use component properties to pass data.", "source": "MakerMate", "tested": false },
  { "id": "fx-099", "title": "Evaluate formula with With", "tags": ["Power Fx", "with"], "code": "With({ a: 3, b: 4 }, Sqrt(a^2 + b^2))", "explanation": "Computes hypotenuse.", "source": "MakerMate", "tested": true },
  { "id": "fx-100", "title": "Dropdown from distinct values", "tags": ["Power Fx", "distinct", "ui"], "code": "Distinct(Contacts, Region)", "explanation": "Bind Items of dropdown to distinct regions.", "source": "MakerMate", "tested": true },
  { "id": "fx-101", "title": "Patch nested record", "tags": ["Power Fx", "patch"], "code": "Patch(Orders, ThisItem, { Customer: { '@odata.type': \"#Microsoft.Dynamics.CRM.account\", accountid: ddlAccount.Selected.Account } })", "explanation": "Advanced pattern for Dataverse nested JSON.", "source": "MakerMate", "tested": false },
  { "id": "fx-102", "title": "Open URL", "tags": ["Power Fx", "browser"], "code": "Launch(\"https://learn.microsoft.com/power-apps\")", "explanation": "Opens a URL in the browser.", "source": "MakerMate", "tested": true },
  { "id": "fx-103", "title": "Deep link to app screen", "tags": ["Power Fx", "navigate"], "code": "Launch(App.ActiveScreen, { recordId: ThisItem.ID })", "explanation": "Construct deep links to screens with parameters.", "source": "MakerMate", "tested": false },
  { "id": "fx-104", "title": "Param read", "tags": ["Power Fx", "params"], "code": "Param(\"recordId\")", "explanation": "Reads a URL or app parameter.", "source": "MakerMate", "tested": true },
  { "id": "fx-105", "title": "Concurrent image prefetch", "tags": ["Power Fx", "concurrent"], "code": "Concurrent( Set(img1, Image1.Image), Set(img2, Image2.Image) )", "explanation": "Prefetches multiple images.", "source": "MakerMate", "tested": false },
  { "id": "fx-106", "title": "Timer controlled autosave (pattern)", "tags": ["Power Fx", "timer"], "code": "// Use Timer with AutoStart and OnTimerEnd to Patch changes", "explanation": "Autosave pattern via Timer.", "source": "MakerMate", "tested": false },
  { "id": "fx-107", "title": "Accessible focus set", "tags": ["Power Fx", "a11y"], "code": "SetFocus(txtSearch)", "explanation": "Moves focus to a control.", "source": "MakerMate", "tested": true },
  { "id": "fx-108", "title": "Error summary aggregation", "tags": ["Power Fx", "error"], "code": "Concat(EditForm1.Error, ThisRecord.Message, Char(10))", "explanation": "Concatenates form errors to a summary.", "source": "MakerMate", "tested": false },
  { "id": "fx-109", "title": "Table contains value", "tags": ["Power Fx", "table"], "code": "CountIf(colItems, ID = targetId) > 0", "explanation": "Checks whether collection contains a record by ID.", "source": "MakerMate", "tested": true },
  { "id": "fx-110", "title": "Filter nested choice value", "tags": ["Power Fx", "choice"], "code": "Filter(Tasks, Status.Value in [\"New\", \"Done\"]) ", "explanation": "Filters on specific choice values.", "source": "MakerMate", "tested": true },
  { "id": "fx-111", "title": "Gallery selection index", "tags": ["Power Fx", "gallery"], "code": "Gallery1.SelectedIndex", "explanation": "Gets selected index.", "source": "MakerMate", "tested": true },
  { "id": "fx-112", "title": "Select parent from child control", "tags": ["Power Fx", "controls"], "code": "Select(Parent)", "explanation": "Triggers parent control action.", "source": "MakerMate", "tested": true },
  { "id": "fx-113", "title": "Navigate with parameter string", "tags": ["Power Fx", "navigate"], "code": "Navigate(ScreenDetails, { id: Text(ThisItem.ID) })", "explanation": "Passes string parameter.", "source": "MakerMate", "tested": true },
  { "id": "fx-114", "title": "Coalesce chain", "tags": ["Power Fx", "blank"], "code": "Coalesce(x, y, z, 0)", "explanation": "First non-blank.", "source": "MakerMate", "tested": true },
  { "id": "fx-115", "title": "Default selected item in dropdown", "tags": ["Power Fx", "ui"], "code": "LookUp(Choices(Tasks.Status), Value=\"New\")", "explanation": "Default selected choice value.", "source": "MakerMate", "tested": true },
  { "id": "fx-116", "title": "Numeric only input", "tags": ["Power Fx", "text"], "code": "IsMatch(TextInput1.Text, \"^\\d*$\")", "explanation": "Allows only digits.", "source": "MakerMate", "tested": true },
  { "id": "fx-117", "title": "Uppercase transform", "tags": ["Power Fx", "text"], "code": "Upper(TextInput1.Text)", "explanation": "Uppercases text.", "source": "MakerMate", "tested": true },
  { "id": "fx-118", "title": "Lowercase transform", "tags": ["Power Fx", "text"], "code": "Lower(TextInput1.Text)", "explanation": "Lowercases text.", "source": "MakerMate", "tested": true },
  { "id": "fx-119", "title": "Title case (simple)", "tags": ["Power Fx", "text"], "code": "Concat( ForAll( Split(Lower(s), \" \" ), Upper(Left(ThisRecord.Value,1)) & Mid(ThisRecord.Value,2) & \" \" ) )", "explanation": "Simple title-case conversion.", "source": "MakerMate", "tested": false },
  { "id": "fx-120", "title": "Strip HTML tags (simple)", "tags": ["Power Fx", "text"], "code": "// Use IsMatch/Substitute patterns to remove <...> where safe", "explanation": "Pattern note: stripping HTML in Power Fx is limited.", "source": "MakerMate", "tested": false }
]
